<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>jn-core</display-name>
	<!-- Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,号分隔 此参数用于后面的Spring Context 
		Loader -->

	<welcome-file-list>
		<welcome-file>
		index.html
		</welcome-file>
	</welcome-file-list>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext.xml,
			classpath:applicationContext-api.xml,
			classpath:applicationContext-security.xml,
			classpath:stat-sql.xml
			<!-- Add more context here. -->
		</param-value>
	</context-param>

	<!--Spring的ApplicationContext 载入 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 放在ContextLoaderListener之后 -->
	<listener>
		<listener-class>com.baidu.jn.web.listener.RmiListener</listener-class>
	</listener>

	<!-- Filter 定义 -->
	<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!-- Static resource filter -->
	<filter>
		<filter-name>staticResourceFilter</filter-name>
		<filter-class>com.baidu.jn.web.filter.StaticResourceFilter</filter-class>
	</filter>

	<!-- session filter -->
	<!-- use java_memcached as java client -->
	<filter>
		<filter-name>sessionFilter</filter-name>
		<filter-class>com.baidu.jn.web.filter.SessionFilter</filter-class>
	</filter>

	<!-- Use Xmemcached as java client -->
	<filter>
		<display-name>MemcachedSessionFilter</display-name>
		<filter-name>MemcachedSessionFilter</filter-name>
		<filter-class>com.baidu.jn.web.filter.XMemcachedSessionFilter</filter-class>
		<init-param>
			<param-name>sessionId</param-name>
			<param-value>sid</param-value>
		</init-param>
		<init-param>
			<param-name>cookieDomain</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>cookiePath</param-name>
			<param-value>/</param-value>
		</init-param>
	</filter>

	<!-- Hibernate Open Session In View filter -->
	<filter>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>

	<!-- Api ip domain filter -->
	<filter>
		<filter-name>ApiIpFilter</filter-name>
		<filter-class>com.baidu.jn.web.filter.IpDomainFilter</filter-class>
		<init-param>
			<param-name>stopPage</param-name>
			<param-value>http://www.baidu.com/search/error.html</param-value>
		</init-param>
	</filter>

	<!-- SpringSecurity filter -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter>
		<filter-name>directlyNavigateToMainPageWhenAuthenticationSuccessFilter</filter-name>
		<filter-class>com.baidu.jn.service.user.impl.DirectlyNavigateToMainPageIfAuthenticationSuccessFilter</filter-class>
	</filter>

	<!-- Struts2 filter -->
	<filter>
		<filter-name>struts2CleanupFilter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
	</filter>

	<filter>
		<filter-name>struts2Filter</filter-name>
		<filter-class>com.baidu.jn.web.filter.CustomizedStrutsPrepareAndExecuteFilter</filter-class>
	</filter>

	<!-- Filter 映射 -->
	<!-- use MemcachedSessionFilter, not sessionFilter -->
	<filter-mapping>
		<filter-name>MemcachedSessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>ApiIpFilter</filter-name>
		<url-pattern>/api/ContractLineApi</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>ApiIpFilter</filter-name>
		<url-pattern>/api/MaterialAuditApi</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>ApiIpFilter</filter-name>
		<url-pattern>/api/SequenceApi</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>api</servlet-name>
		<servlet-class>com.baidu.rpc.server.RpcServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>api</servlet-name>
		<url-pattern>/api/*</url-pattern>
	</servlet-mapping>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>staticResourceFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<url-pattern>/j_spring_security_check</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/j_spring_security_logout</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 实现JN和ALB的单点登录 -->
	<filter-mapping>
		<filter-name>directlyNavigateToMainPageWhenAuthenticationSuccessFilter</filter-name>
		<url-pattern>/index.html</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>struts2CleanupFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<filter-mapping>
		<filter-name>struts2Filter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- session超时定义,单位为分钟 ,此时间应和UC的有效时间及Memcached的expired time一致 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<!-- 出错页面定义 -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/common/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/common/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/common/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/common/403.jsp</location>
	</error-page>

	<!-- Webservice definition <servlet> <servlet-name>alb</servlet-name> <servlet-class>com.baidu.rpc.server.RpcServlet</servlet-class> 
		</servlet> <servlet-mapping> <servlet-name>alb</servlet-name> <url-pattern>/alb/*</url-pattern> 
		</servlet-mapping> <filter> <filter-name>AlbIpDomainFilter</filter-name> 
		<filter-class> com.baidu.adrc.web.utils.IpDomainFilter</filter-class> <init-param> 
		<param-name>blackList</param-name> <param-value></param-value> </init-param> 
		<init-param> <param-name>whiteList</param-name> <param-value>10.65.17.222,10.65.17.223,10.23.238.11,10.23.238.46</param-value> 
		</init-param> <init-param> <param-name>stopPage</param-name> <param-value>/common/error.jsp</param-value> 
		</init-param> </filter> -->

	<!-- 以下是rpc相关配置 <security-constraint> <web-resource-collection> <web-resource-name>The 
		Entire Web Application</web-resource-name> <url-pattern>/remoting/*</url-pattern> 
		</web-resource-collection> <auth-constraint> <role-name>tomcat</role-name> 
		</auth-constraint> </security-constraint> -->
	<!-- 安全机制 -->
	<!-- <login-config> <auth-method>BASIC</auth-method> <realm-name>Tomcat 
		Supported Realm</realm-name> </login-config> <security-role> <description> 
		An example role defined in "conf/tomcat-users.xml" </description> <role-name>tomcat</role-name> 
		</security-role> -->

</web-app>
